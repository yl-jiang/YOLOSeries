loss_hyp:
  use_focal_loss: true # 是否使用focal loss方法计算分类损失
  focal_loss_gamma: 1.5 # focal loss参数
  focal_loss_alpha: 0.25  # focal loss参数
  iou_loss_scale: 0.05  # 回归损失（bbox损失）权重
  use_l1: true  # compute L1 norm regression loss
  l1_loss_scale: 0.01 # L1 loss损失权重
  cls_loss_scale: 0.5  # 分类损失权重
  cof_loss_scale: 1.0  # 置信度损失权重
  class_smooth_factor: 1.0 # 标签平滑
  cls_pos_weight: 1.0  # 计算分类损失时，对类别为1的loss乘以该权重
  cof_pos_weight: 1.0  # 计算分类损失时，对类别为1的loss乘以该权重

train_hyp:
  pretrained_model_path: ""  # 预训练模型路径(xxx/xxx.pth)
  train_img_dir: ~  # 存放训练图像的文件夹路径
  train_lab_dir: ~  # 存放训练label的文件夹路径
  test_img_dir: "./result/coco_test_imgs"  # for test
  val_img_dir: ~  # validation image dir
  val_lab_dir: ~  # validation label dir
  aspect_ratio: false  # 训练时，是否按照训练集中图片长宽比从小到大的顺序输入到网络
  aspect_ratio_path: ""  # 训练数据集中每张图片的长宽比（用于根据图像长宽比的一定顺序输入网络进行训练）
  cache_num: 0  # 将cache_num数量的训练数据存放到内存中（加速训练）
  input_img_size:  # 输入训练网络的图片大小
    - 640
    - 640
  batch_size: 4
  drop_last: true  # Pytorch DataLoader参数
  pin_memory: false  # Pytorch DataLoader参数
  shuffle: true  # Pytorch DataLoader参数
  num_workers: 4  # Pytorch DataLoader参数
  total_epoch: 300
  num_anchors: 1  # 每个grid给出多少个预测框
  device: "gpu"  # 是否使用GPU进行训练 / ['gpu', 'cpu']中的一种
  accumulate_loss_step: 64  # 累积梯度下降
  do_ema: true  # 是否维持一个Everage Moving Model
  weight_init_prior_prob: 0.01  # 用于网络中的bias参数初始化
  validation_every: 2  # 每隔多少个epoch testing一次
  show_tbar_every: 10  # 每个多少个step显示实时训练状态信息
  use_tta: true  # validation时是否使用TTA
  save_log_txt: false  # 是否保存log文件
  log_save_path: ~  # 指定保存log日志的路径（xxx/xxx.txt）
  mutil_scale_training: true  # 是否使用多尺度训练
  current_work_dir: null  # 当前工作目录（可以不设置）
  calculate_map_every: 2.0  # 每隔多少个epoch计算一次验证数据集的map
  save_ckpt_every: 5  # 每隔多少个epoch保存一次模型
  model_type: 'small'  # 使用模型类型
  use_auxiliary_classifier: false # 是否使用额外的分类器对预测结果进行调优
  iou_type: 'ciou'  # 计算回归损失时使用的iou类型 / ['iou', 'giou', 'ciou']中的一种
  enable_tensorboard: true

warmup_hyp:
  do_warmup: true  # 是否开启预热训练
  warmup_epoch: 0
  warmup_bias_lr: 0.1  # warmup lr for bias
  warmup_momentum: 0.8

optimizer_hyp:
  optimizer: 'sgd' # 优化器类别/['sgd', 'adam']中的一种
  init_lr: 0.01  # 0.01 for sgd / 0.001 for adam
  weight_decay: 0.0001
  momentum: 0.9
  lr_scheculer_bias: 0.1

data_hyp:
  data_aug_scale: 0.5  # 缩放
  data_aug_shear: 0.2  # 剪切
  data_aug_translate: 0.1  # 平移
  data_aug_degree: 0.0  # 旋转
  data_aug_prespective: 0.0  # 透视
  data_aug_hsv_p: 1.0  # hsv色彩空间变换
  data_aug_hsv_hgain: 0.015  # hsv色彩空间变换
  data_aug_hsv_sgain: 0.7  # hsv色彩空间变换
  data_aug_hsv_vgain: 0.4  # hsv色彩空间变换
  data_aug_mixup_p: 1.0  # mixup
  data_aug_fliplr_p: 0.5  # 水平翻转
  data_aug_flipud_p: 0.0  # 上下翻转
  data_aug_fill_value: 128  # 图像填充值
  data_aug_mosaic_p: 1.0  # mosaic
  data_aug_cutout_p: 1.0  # cutout
  data_aug_cutout_iou_thr: 0.3  # 若随机产生的mask与target任一bbox的iou值大于该阈值，则会采取一些行动避免这种情况发生（默认操作是舍弃该mask）

nms_hyp:
  iou_threshold: 0.2
  conf_threshold: 0.3
  cls_threshold: 0.3
  max_predictions_per_img: 300  # 每张图像最多留下一定数量的预测框
  min_prediction_box_wh: 2  # 去除长宽小于一定阈值的预测框
  max_prediction_box_wh: 4096  # 去除长宽大于一定阈值的预测框
  nms_type: 'iou'  # NMS时使用的iou类型
  infer_img_save_path: ~  # 指定预测结果保存的文件夹路径
  mutil_label: false  # 一个object是否可以有多个标签
  agnostic: true  # 是否在同类别的bbox之间进行NMS
  postprocess_bbox: true  # 是否对预测框进行调优
  wfb: false  # use NMS or Weighted Fusion Bbox
  wfb_weights: 
    - 1
    - 1
    - 1
  wfb_iou_threshold: 0.5
  wfb_skip_box_threshold: 0.001

val_hyp:
  show_gt_bbox: false  # 是否将gt box画在预测结果图像上
  save_pred_bbox: false  
  half: false  # 是否使用半精度（float16）进行预测

